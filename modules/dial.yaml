defaults:
  leds_effect_red: 100%
  leds_effect_green: 100%
  leds_effect_blue: 100%
  leds_effect_brightness: 20%
  leds_off_delay: 1s

# Binary sensor to indicate when the dial is being turned
binary_sensor:
  - platform: template
    name: "${dial_name} Active"
    id: ${dial_id}_active

# Dial value exposed as a number so it can be set from Home Assistant
number:
  - platform: template
    name: ${dial_name}
    id: ${dial_id}
    min_value: 1
    max_value: 10
    step: 1
    restore_value: true
    optimistic: true

# Rotary encoder to detect dial turns
sensor:
  - platform: rotary_encoder
    id: ${dial_id}_re
    pin_a:
      number: ${dial_pin_b}
      mode:
        input: true
        pulldown: true
    pin_b:
      number: ${dial_pin_a}
      mode:
        input: true
        pulldown: true
    resolution: 2
    on_clockwise:
      then:
        - binary_sensor.template.publish:
            id: ${dial_id}_active
            state: true
        - number.increment:
            id: ${dial_id}
            cycle: false
    on_anticlockwise:
      then:
        - binary_sensor.template.publish:
            id: ${dial_id}_active
            state: true
        - number.decrement:
            id: ${dial_id}
            cycle: false
    on_value:
      then:
        - light.addressable_set:
            id: ${leds_id}
            range_from: 0
            range_to: !lambda return int(id(${dial_id}).state) - 1;
            red: ${leds_effect_red}
            green: ${leds_effect_green}
            blue: ${leds_effect_blue}
            color_brightness: ${leds_effect_brightness}
        - if:
            condition:
              lambda: |-
                return id(${dial_id}).state < 10;
            then:
              - light.addressable_set:
                  id: ${leds_id}
                  range_from: !lambda return int(id(${dial_id}).state);
                  range_to: 9
                  red: 0%
                  green: 0%
                  blue: 0%
                  color_brightness: 0%
        - delay: ${leds_off_delay}
        - light.turn_off: ${leds_id}
        - binary_sensor.template.publish:
            id: ${dial_id}_active
            state: false

# LED strip to show the dial position
light:
  - id: ${leds_id}
    platform: esp32_rmt_led_strip
    rgb_order: GRB
    pin:
      number: ${leds_pin}
    num_leds: 10
    chipset: WS2812
    name: ${leds_name}
    rmt_symbols: 48
